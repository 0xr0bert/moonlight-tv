name: Release

on:
  release:
    types: [created]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  release-webos:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Download ares-cli-rs
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "webosbrew/ares-cli-rs"
          latest: true
          fileName: "ares-package_*.deb"
          out-file-path: "temp"

      - name: Download Manifest Generator
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "webosbrew/dev-toolbox-cli"
          latest: true
          fileName: "webosbrew-toolbox-gen-manifest_*.deb"
          out-file-path: "temp"

      - name: Install webOS CLI
        run: sudo apt-get install ./temp/*.deb

      - name: webOS Build
        uses: ./.github/actions/build-webos
        with:
          build-type: ${{ env.BUILD_TYPE }}

      - name: Create Release (webOS)
        id: create_release_webos
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ steps.tagName.outputs.tag }}
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: dist/*.ipk,dist/*.manifest.json

  release-raspi:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName

      - name: Update Packages
        shell: bash
        run: sudo apt-get -yq update

      - name: Prepare Sysroot
        id: pi-sysroot
        uses: mariotaku/raspbian-sysroot-action@main
        with:
          packages: ${{github.workspace}}/scripts/raspi/sysroot-packages.list

      - name: Install Build Tools
        shell: bash
        run: sudo apt-get -y -qq install crossbuild-essential-armhf cmake gettext

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DTARGET_RASPI=ON
          -DCMAKE_TOOLCHAIN_FILE=${{steps.pi-sysroot.outputs.cmake-toolchain}}

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Package
        working-directory: ${{github.workspace}}/build
        run: |
          cpack
          dpkg-scanpackages . > Release

      - name: Create Release (Raspberry Pi)
        id: create_release_raspi
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ steps.tagName.outputs.tag }}
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: build/*.deb,build/Release
